name: Clang Linux CI v2
on:
  # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#scheduled-events
  #schedule:
    #- cron:  '* 0 * * *'

  # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#workflow_dispatch
  workflow_dispatch:
jobs:
  kick_tuxbuild:
    name: TuxBuild
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: ubuntu-20.04
    container: tuxbuild/tuxbuild
    env:
      TUXBUILD_TOKEN: ${{ secrets.TUXBUILD_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: tuxbuild
        run: |
          tuxbuild build-set --git-repo 'https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git' --git-ref master --set-name clang-nightly --json-out builds.json --tux-config tuxbuild.yml
      - name: save output
        uses: actions/upload-artifact@v2
        with:
          path: builds.json
          name: output_artifact
  # Example using 3D matrix.
  LLVM_1_LLVM_IAS_1:
    runs-on: ubuntu-20.04
    # Waits on kick_tuxbuild to complete.
    needs: kick_tuxbuild
    strategy:
      matrix:
        ARCH: [arm32_v5, arm32_v7, arm64, x86, x86_64]
        LLVM: [0, 1]
        LLVM_IAS: [0, 1]
      fail-fast: false
    env:
      ARCH: ${{ matrix.ARCH }}
      LLVM: ${{ matrix.LLVM }}
      LLVM_IAS: ${{ matrix.LLVM_IAS }}
      INSTALL_DEPS: 1
    name: ARCH=${{ matrix.ARCH }} LLVM=${{ matrix.LLVM }} LLVM_IAS=${{ matrix.LLVM_IAS }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/download-artifact@v2
        with:
          name: output_artifact
      - name: Boot Test
        run: ./check_logs.py
  LLVM_0_LLVM_IAS_0:
    runs-on: ubuntu-20.04
    # Waits on kick_tuxbuild to complete.
    needs: kick_tuxbuild
    strategy:
      matrix:
        # TODO: mips is failing build test unexpectedly: https://gitlab.com/Linaro/tuxmake/-/issues/110
        # TODO: mipsel: https://gitlab.com/Linaro/tuxmake/-/issues/108#note_471776893
        # TODO: ppc32, ppc64: https://gitlab.com/Linaro/tuxmake/-/issues/108
        ARCH: [arm32_v6, mips]
      fail-fast: false
    env:
      ARCH: ${{ matrix.ARCH }}
      LLVM: 0
      LLVM_IAS: 0
      INSTALL_DEPS: 1
    name: ARCH=${{ matrix.ARCH }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/download-artifact@v2
        with:
          name: output_artifact
      - name: Boot Test
        run: ./check_logs.py
  non_boot_test:
    runs-on: ubuntu-20.04
    # Waits on kick_tuxbuild to complete.
    needs: kick_tuxbuild
    strategy:
      matrix:
        # TODO: ppc64le: https://gitlab.com/Linaro/tuxmake/-/issues/109
        # check_logs.py will skip boot tests if there were errors during build.
        ARCH: [arm32_v5, arm32_v6, ppc64le, s390]
      fail-fast: false
    env:
      ARCH: ${{ matrix.ARCH }}
      LLVM: 0
      LLVM_IAS: 0
      INSTALL_DEPS: 1
      BOOT: 0
    name: ARCH=${{ matrix.ARCH }} BOOT=0
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/download-artifact@v2
        with:
          name: output_artifact
      - name: Boot Test
        run: ./check_logs.py
  # Example without matrix.
  riscv:
    runs-on: ubuntu-20.04
    needs: kick_tuxbuild
    name: ARCH=riscv LLVM=1 LLVM_IAS=1 BOOT=0
    env:
      ARCH: riscv
      LLVM: 0
      LLVM_IAS: 1
      INSTALL_DEPS: 1
      BOOT: 0
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/download-artifact@v2
        with:
          name: output_artifact
      - name: Boot Test
        run: ./check_logs.py
