name: Clang Linux CI v2
on:
  # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#scheduled-events
  #schedule:
    #- cron:  '* 0 * * *'

  # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#workflow_dispatch
  workflow_dispatch:
jobs:
  kick_tuxbuild:
    name: Kick Off Builds
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Create jobs
        # TODO: run tuxbuild
        run: |
          mv mock.builds.json builds.json
      - name: save output
        uses: actions/upload-artifact@v2
        with:
          path: builds.json
          name: output_artifact
  # Example using 3D matrix.
  LLVM_1_LLVM_IAS_1:
    runs-on: ubuntu-20.04
    # Waits on kick_tuxbuild to complete.
    needs: kick_tuxbuild
    strategy:
      matrix:
        ARCH: [arm_v5, arm_v7, arm64, x86, x86_64]
        LLVM: [0, 1]
        LLVM_IAS: [0, 1]
      fail-fast: false
    env:
      ARCH: ${{ matrix.ARCH }}
      LLVM: ${{ matrix.LLVM }}
      LLVM_IAS: ${{ matrix.LLVM_IAS }}
    name: ARCH=${{ matrix.ARCH }} LLVM=${{ matrix.LLVM }} LLVM_IAS=${{ matrix.LLVM_IAS }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/download-artifact@v2
        with:
          name: output_artifact
      - name: Boot Test
        run: ./check_logs.py
  LLVM_0_LLVM_IAS_0:
    runs-on: ubuntu-20.04
    # Waits on kick_tuxbuild to complete.
    needs: kick_tuxbuild
    strategy:
      matrix:
        # TODO: mipsel
        ARCH: [arm_v6, mips, ppc32, ppc64, ppc64le, s390]
      fail-fast: false
    env:
      ARCH: ${{ matrix.ARCH }}
      LLVM: 0
      LLVM_IAS: 0
    name: ARCH=${{ matrix.ARCH }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/download-artifact@v2
        with:
          name: output_artifact
      - name: Boot Test
        run: ./check_logs.py
  # Example without matrix.
  riscv:
    runs-on: ubuntu-20.04
    needs: kick_tuxbuild
    name: ARCH=riscv LLVM=1 LLVM_IAS=1
    env:
      ARCH: riscv
      LLVM: 0
      LLVM_IAS: 1
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/download-artifact@v2
        with:
          name: output_artifact
      - name: Boot Test
        run: ./check_logs.py
